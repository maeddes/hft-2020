 history
    1  ls
    2  docker
    3  clear
    4  clear
    5  docker ps
    6  docker images
    7  docker container
    8  docker container ls
    9  docker ps
   10  docker rm
   11  docker rmi
   12  docker images
   13  docker image
   14  docker container rm
   15  docker -v
   16  docker info
   17  docker run novatec/technologyconsulting-hello-container:v0.1
   18  docker ps
   19  docker ps -a
   20  docker run -d -p 8082:8080 -e PROPERTY=Stuttgart-Entwicklertag --name happy_container novatec/technologyconsulting-hello-container:v0.1
   21  docker ps
   22  curl
   23  curl localhost:8082
   24  docker run -d -p 8082:8080 -e PROPERTY=Stuttgart-Entwicklertag --name happy_container novatec/technologyconsulting-hello-container:v0.1
   25  docker ps
   26  docker ps -q | xargs docker stop
   27  docker ps -a -q | xargs docker rm
   28  docker ps
   29  docker images
   30  docker run -d -p 8080:8080 -e PROPERTY=Stuttgart --name base_container novatec/technologyconsulting-hello-container:v0.1
   31  curl localhost:8080/hello
   32  docker ps
   33  docker ps --no-trunc
   34  docker inspect
   35  docker images
   36  docker inspect fa1
   37  docker ps
   38  docker container inspect 85d
   39  docker image inspect
   40  docker container inspect
   41  docker exec
   42  docker ps
   43  docker exec 85d ls
   44  ls
   45  docker exec 85d env
   46  docker exec 85d ps -ef
   47  ps
   48  docker exec 85d ps
   49  docker exec 85d /bin/bash
   50  docker ps
   51  docker exec -it 85d  /bin/bash
   52  ls
   53  ls
   54  pwd
   55  echo "hellohellohello" >> file.txt
   56  ls
   57  docker exec 85d ls
   58  ls
   59  docker cp file.txt base_container:/work
   60  docker exec 85d ls
   61  docker exec -it 85d  /bin/bash
   62  docker images
   63  docker run -d -p 8081:8080 -e PROPERTY=Stuttgart --name base_container2 novatec/technologyconsulting-hello-container:v0.1
   64  docker ps
   65  docker exec 85d ls
   66  docker exec base_container2 ls
   67  docker commit base_container newimage:v0.1
   68  docker images
   69  docker ps
   70  docker run -d -p 8082:8080 -e PROPERTY=London --name new_container newimage:v0.1
   71  docker ps
   72  docker ls 5272
   73  docker exec 5272 ls
   74  docker run
   75  docker images
   76  docker image inspect fdd
   77  docker run -d -e PROPERTY=London --name new_container_x newimage:v0.1
   78  docker ps
   79  docker run -d -p 1234:8080 -e PROPERTY=London --name new_container newimage:v0.1
   80  docker run -d -p 1234:8080 -e PROPERTY=London --name new_container newimage:v0.1
   81  docker run -d -p 1234:8080 -e PROPERTY=London --name new_container_y newimage:v0.1
   82  curl localhost:1234
   83  curl localhost:1235
   84  history 
   85  git clone https://github.com/NovatecConsulting/technologyconsulting-containerexcerciseapp.git
   86  ls
   87  cd technologyconsulting-containerexcerciseapp/
   88  ls
   89  cat Dockerfile-todoui
   90  cat Dockerfile-todobackend 
   91  docker ps
   92  docker exec 74a ls
   93  docker exec 74a pwd
   94  docker build
   95  ls
   96  cp Dockerfile-todobackend Dockerfile
   97  ls
   98  docker build
   99  docker build .
  100  docker images
  101  docker rmi 77fd
  102  docker build -t hftimage:v0.1 .
  103  docker images
  104  docker ps
  105  docker rm $(docker ps -q | xargs docker stop)
  106  docker ps
  107  docker run -d -p 8080:8080 -e SPRING_PROFILES_ACTIVE=dev --name todobackend todobackend:v0.1
  108  docker images
  109  docker run -d -p 8080:8080 -e SPRING_PROFILES_ACTIVE=dev --name todobackend hftimage:v0.1
  110  docker ps
  111  docker logs d6c
  112  ls
  113  cat Dockerfile-todoui
  114  cat Dockerfile-todobackend
  115  vi Dockerfile-todoui 
  116  nano
  117  vi Dockerfile-todoui 
  118  ls
  119  ls todoui
  120  ls todoui/target/
  121  vi Dockerfile-todoui 
  122  cat Dockerfile-todoui 
  123  cat Dockerfile-todobackend
  124  ls
  125  docker build -f Dockerfile-todoui -t todoui:v0.1 .
  126  docker images
  127  docker tag
  128  docker tag hftimage:v0.1 todobackend:v0.1
  129  docker ls
  130  docker images
  131  docker ps
  132  docker stop d6c
  133  docker run -d -p 8080:8080 -e SPRING_PROFILES_ACTIVE=dev --name todobackend todobackend:v0.1
  134  docker rm todobackend
  135  docker run -d -p 8080:8080 -e SPRING_PROFILES_ACTIVE=dev --name todobackend todobackend:v0.1
  136  docker run -d -p 8090:8090 --name todoui todoui:v0.1
  137  docker ps
  138  docker ps
  139  docker logs todoui
  140  docker ps
  141  docker run -d -p 5432:5432 --name postgresdb -e POSTGRES_USER=matthias -e POSTGRES_PASSWORD=password -e POSTGRES_DB=mydb 
  142  docker run -d -p 5432:5432 --name postgresdb -e POSTGRES_USER=matthias -e POSTGRES_PASSWORD=password -e POSTGRES_DB=mydb postgres
  143  docker ps
  144  docker images
  145  docker logs postgresdb
  146  docker run --name some-mongo -d mongo
  147  docker run --name some-redis -d redis
  148  docker images
  149  docker ps
  150  docker stop bfd 5e9
  151  docker ps
  152  docker exec todoui pwd
  153  docker exec todoui ls
  154  docker exec todoui ping
  155  ping postgresdb
  156  docker exec todoui ping postgresdb
  157  docker exec -it todoui /bin/bash
  158  docker exec -it todoui /bin/sh
  159  docker exec todobackend ip a
  160  docker exec todoui ip a
  161  docker exec todoui ping todoui
  162  docker exec todoui ping 172.17.0.2
  163  docker exec todoui ping 172.17.0.3
  164  docker network
  165  docker network todonet
  166  docker network create todonet
  167  docker network ls
  168  docker connect
  169  docker network connect
  170  docker network connect todonet todoui
  171  docker exec todoui ping 172.17.0.2
  172  docker exec todoui ping todoui
  173  docker network ls
  174  docker network inspect todonet
  175  docker container inspect todoui
  176  docker network connect todonet postgresdb
  177  docker network inspect todonet
  178  docker exec -it todoui /bin/sh
  179  docker network
  180  docker network disconnect todonet postgresdb
  181  docker network inspect todonet
  182  docker network connect todonet postgresdb
  183  docker network inspect todonet
  184  docker ps
  185  docker stop toodbackend
  186  docker stop todobackend
  187  docker rm todobackend
  188  docker run -d -p 8080:8080 --network todonet -e SPRING_PROFILES_ACTIVE=prod -e POSTGRES_HOST=postgresdb --name todobackend todobackend:v0.1
  189  docker logs -f todobackend
  190  docker ps
  191  curl http://ip172-18-0-39-bun2vrqg770000ejtvog-8080.direct.labs.play-with-docker.com/todos/
  192  curl -X POST http://ip172-18-0-39-bun2vrqg770000ejtvog-8080.direct.labs.play-with-docker.com/todos/new_todo
  193  curl http://ip172-18-0-39-bun2vrqg770000ejtvog-8080.direct.labs.play-with-docker.com/todos/
  194  curl localhost:8080/todos/
  195  docker ps
  196  docker stop todoui
  197  docker start todoui
  198  docker ps
  199  docker logs 89b
  200  docker ps
  201  docker kill 69e
  202  docker kill 69a
  203  dock rm 69a
  204  docker rm 69e
  205  docker rm 69a
  206  docker ps -a
  207  docker 1 onet -e SPRING_PROFILES_ACTIVE=prod -e POSTGRES_HOST=postgresdb --name todobackend todobackend:v0.1
  208  docker run -d -p 8080:8080 --network todonet -e SPRING_PROFILES_ACTIVE=prod -e POSTGRES_HOST=postgresdb --name todobackend todobackend:v0.1
  209  docker ps
  210  docker logs 68c
  211  docker logs -f 68c
  212  docker ps
  213  docker kill postgresdb
  214  docker logs -f 68c
  215  docker ps
  216  docker ps -a
  217  docker start postgresdb
  218  docker logs postgresdb
  219  history
